version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@2.0.3
  eb: circleci/aws-elastic-beanstalk@2.0.1
  path-filtering: circleci/path-filtering@0.1.2
# Define the jobs we want to run for this project
jobs:
  build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: '16.15.0'
      - run: node --version
      - run: yarn
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: true 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_ACCESS_KEY_ID 
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY 
          aws-region: AWS_REGION
      - eb/setup
      - run:
            name: "build job"
            command: |
              echo "this is the build job"
      - run:
            name: Back-End Install
            command: |
              yarn api:install
      - run:
            name: Back-End Build
            command: |
              yarn api:build
      - run:
            name: Back-End Deploy
            command: |
              yarn api:deploy
      - run: 
            name: "setting env_vars"
            command: |
              eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME && eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD 
              && eb setenv POSTGRES_DB=$POSTGRES_DB && eb setenv DB_PORT=$DB_PORT
              && eb setenv PORT=$PORT && eb setenv POSTGRES_HOST=$POSTGRES_HOST
              && eb setenv AWS_REGION=$AWS_REGION && eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME
              && eb setenv AWS_PROFILE=$AWS_PROFILE && eb setenv AWS_BUCKET=$AWS_BUCKET
              && eb setenv URL=$URL && eb setenv JWT_SECRET=$JWT_SECRET
              && eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID && eb setenv AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - run:
            name: Front-End Install
            command: |
              yarn frontend:install
      - run:
            name: Front-End Build
            command: |
             yarn frontend:build
      - run:
            name: Front-End Deploy
            command: |
              yarn frontend:deploy
      - run:
            name: success confirmation
            command: |
              echo "build and deployment successful"
  test:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - run: echo "this is the test job"

# Orchestrate our job run sequence
workflows:
  build_and_test:
    jobs:
      - build:
          filters:
            branches:
             only: main
      - test